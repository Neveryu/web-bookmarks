(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{595:function(t,s,n){"use strict";n.r(s);var a=n(10),o=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"angular-实战中的总结与技术点剖析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angular-实战中的总结与技术点剖析"}},[t._v("#")]),t._v(" Angular 实战中的总结与技术点剖析")]),t._v(" "),s("h2",{attrs:{id:"一、bootstrapapplication-和-platformbrowserdynamic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、bootstrapapplication-和-platformbrowserdynamic"}},[t._v("#")]),t._v(" 一、bootstrapApplication 和 platformBrowserDynamic")]),t._v(" "),s("p",[s("code",[t._v("bootstrapApplication")]),t._v(" 是AngularJS框架中的一个方法，用于手动启动应用程序")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" bootstrapApplication "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/platform-browser'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nangular"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("element")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ready")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  angular"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bootstrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myApp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("strictDi")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("bootstrapApplication")]),t._v(" 和 "),s("code",[t._v("platformBrowserDynamic")]),t._v(" 都是 Angular 框架中用于手动启动应用程序的方法，但它们的作用和使用方式有所不同。")]),t._v(" "),s("p",[s("code",[t._v("platformBrowserDynamic")]),t._v(" 是 Angular 框架中的一个函数，它返回一个 PlatformRef 实例，该实例表示在浏览器中运行Angular应用程序的平台。我们可以使用这个实例来启动我们的应用程序。以下是一个使用 "),s("code",[t._v("platformBrowserDynamic")]),t._v(" 方法的示例：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" platformBrowserDynamic "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/platform-browser-dynamic'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AppModule "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./app.module'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("platformBrowserDynamic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bootstrapModule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AppModule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("我们使用 "),s("code",[t._v("platformBrowserDynamic")]),t._v(" 方法返回的 PlatformRef 实例来启动我们的 Angular 应用程序。我们还需要引入我们的应用程序模块（在这个例子中是AppModule）。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("platformBrowserDynamic")]),t._v(" 是 Angular 框架中用于手动启动应用程序的方法，而 "),s("code",[t._v("bootstrapApplication")]),t._v(" 是 AngularJS 框架中用于手动启动应用程序的方法。【现在都是 Angular了，所以使用 "),s("code",[t._v("platformBrowserDynamic")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"二、关于-tsconfig-app-json、-tsconfig-json、-tsconfig-spec-json、-angular-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、关于-tsconfig-app-json、-tsconfig-json、-tsconfig-spec-json、-angular-json"}},[t._v("#")]),t._v(" 二、关于 tsconfig.app.json、 tsconfig.json、 tsconfig.spec.json、 angular.json")]),t._v(" "),s("p",[t._v("在Angular项目中，"),s("code",[t._v("tsconfig.json")]),t._v(" 和 "),s("code",[t._v("tsconfig.app.json")]),t._v(" 都是 TypeScript 编译器的配置文件。它们的作用和用途有所不同。")]),t._v(" "),s("p",[s("code",[t._v("tsconfig.json")]),t._v(" 是 TypeScript 编译器的主要配置文件，它定义了项目的全局编译选项。例如，我们可以在 "),s("code",[t._v("tsconfig.json")]),t._v(" 中指定编译输出目录、编译目标、模块系统、源代码目录等。这个文件通常位于项目的根目录下。")]),t._v(" "),s("p",[s("code",[t._v("tsconfig.app.json")]),t._v(" 是 Angular CLI 应用程序的编译器选项的配置文件。它继承了 "),s("code",[t._v("tsconfig.json")]),t._v(" 中的所有编译选项，并添加了一些特定于应用程序的选项。例如，我们可以在 "),s("code",[t._v("tsconfig.app.json")]),t._v(" 中指定应用程序的根目录、输出目录、源代码目录等。这个文件通常位于 src 文件夹下。")]),t._v(" "),s("p",[t._v("总之，"),s("code",[t._v("tsconfig.json")]),t._v(" 是 TypeScript 编译器的主要配置文件，而 "),s("code",[t._v("tsconfig.app.json")]),t._v(" 是 Angular CLI 应用程序的编译器选项的配置文件。它们都用于定义项目的编译选项，但作用和用途有所不同。")]),t._v(" "),s("p",[t._v("在 Angular 项目中，"),s("code",[t._v("tsconfig.spec.json")]),t._v(" 文件是用来配置 TypeScript 编译器在运行单元测试时的选项。这个文件会被 Karma 或者 Jest 自动识别并使用。")]),t._v(" "),s("p",[t._v("在 Angular 项目中，"),s("code",[t._v("angular.json")]),t._v(" 文件是用来配置项目的构建和打包选项的。这个文件包含了多个配置项，可以用来定制化构建和打包过程。")]),t._v(" "),s("h2",{attrs:{id:"三、ngmodule-的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、ngmodule-的作用"}},[t._v("#")]),t._v(" 三、NgModule 的作用")]),t._v(" "),s("p",[s("code",[t._v("@NgModule")]),t._v(" 装饰器中的 bootstrap 属性指定了应用程序的根组件。它告诉 Angular 框架哪个组件应该作为应用程序的入口点，并在启动应用程序时自动引导该组件。")]),t._v(" "),s("p",[s("code",[t._v("@NgModule")]),t._v(" 装饰器中的 imports 属性用于导入当前模块所需的其他模块。在Angular应用程序中，我们通常需要导入一些内置模块或第三方模块，以便我们可以使用它们提供的功能。")]),t._v(" "),s("p",[t._v("BrowserModule 是Angular框架中的一个内置模块，它提供了一些浏览器特定的服务和指令。例如，我们可以使用 BrowserModule 中的 "),s("code",[t._v("ngIf")]),t._v(" 和 "),s("code",[t._v("ngFor")]),t._v(" 指令来创建条件性和循环性的 DOM元素。另外，BrowserModule 还提供了一些浏览器特定的服务，例如 DomSanitizer 和 Title 等。\n因此，在Angular应用程序中，我们通常需要在根模块中导入BrowserModule模块。这样我们就可以使用它提供的服务和指令。")]),t._v(" "),s("p",[t._v("需要注意的是，在Angular应用程序中，每个组件都必须在一个只能由一个模块引导的环境中运行。因此，在根模块中导入BrowserModule模块是必须的，否则我们无法在应用程序中使用任何指令或服务。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("imports: [BrowserModule]")]),t._v("是用于导入所需模块的属性。在Angular应用程序中，我们通常需要在根模块中导入BrowserModule模块，以便我们可以使用它提供的服务和指令。")])]),t._v(" "),s("p",[t._v("如果在 "),s("code",[t._v("@NgModule")]),t._v(" 装饰器中的 bootstrap 数组中传入多个组件，则Angular框架将同时引导这些组件。这意味着，每个组件都会在应用程序启动时被创建，并且会在DOM中显示出来。\n以下是一个使用多个组件的 bootstrap 数组的示例：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" NgModule "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/core'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" BrowserModule "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/platform-browser'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AppComponent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./app.component'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" HeaderComponent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./header.component'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" FooterComponent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./footer.component'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NgModule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("imports")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BrowserModule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("declarations")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("AppComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HeaderComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FooterComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("bootstrap")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("AppComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HeaderComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FooterComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppModule")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在上面的示例中，我们在bootstrap数组中传入了三个组件：AppComponent、HeaderComponent和FooterComponent。当我们启动应用程序时，这三个组件将同时被创建，并且会在DOM中显示出来。")]),t._v(" "),s("p",[t._v("需要注意的是，当我们在bootstrap数组中传入多个组件时，每个组件都必须具有自己的视图容器。否则，Angular框架将无法将它们添加到DOM中。")]),t._v(" "),s("p",[t._v("总之，如果在 "),s("code",[t._v("@NgModule")]),t._v(" 装饰器中的bootstrap数组中传入多个组件，则Angular框架将同时引导这些组件，并在应用程序启动时创建它们。")]),t._v(" "),s("h2",{attrs:{id:"四、commonmodule、-formmodule"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、commonmodule、-formmodule"}},[t._v("#")]),t._v(" 四、CommonModule、 FormModule")]),t._v(" "),s("p",[t._v("CommonModule 是 Angular 框架中的一个模块，它提供了一些常用的指令和管道，如 "),s("code",[t._v("ngIf")]),t._v("、"),s("code",[t._v("ngFor")]),t._v("、"),s("code",[t._v("DatePipe")]),t._v(" 等。\n通常情况下，你需要在一个模块中导入 "),s("code",[t._v("CommonModule")]),t._v("，以便在该模块中使用这些指令和管道。你可以通过以下方式导入 "),s("code",[t._v("CommonModule")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" CommonModule "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/common'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NgModule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("imports")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    CommonModule\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourModule")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("一旦你在模块中导入了CommonModule，你就可以在该模块中使用 "),s("code",[t._v("ngIf")]),t._v("、"),s("code",[t._v("ngFor")]),t._v("、"),s("code",[t._v("DatePipe")]),t._v(" 等指令和管道了。例如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ngIf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"showContent"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("显示内容"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ngFor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"let item of items"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" today "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" date "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("除了CommonModule，还有FormsModule模块，你必须自己添加此模块才能使用 "),s("code",[t._v("[(ngModel)]")]),t._v(" 等等指令。")]),t._v(" "),s("h2",{attrs:{id:"五、关于-class-implements-oninit-的详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、关于-class-implements-oninit-的详解"}},[t._v("#")]),t._v(" 五、关于 "),s("code",[t._v("class implements OnInit")]),t._v(" 的详解")]),t._v(" "),s("p",[t._v("在Angular中，"),s("code",[t._v("OnInit")]),t._v("是一个生命周期钩子，用于在组件初始化时执行一些操作。当一个组件被创建时，Angular会按照特定的顺序调用一系列生命周期钩子函数，以便开发人员可以在不同的阶段执行不同的任务。"),s("code",[t._v("OnInit")]),t._v("钩子函数是其中之一，它在组件初始化时被调用。")]),t._v(" "),s("p",[t._v("具体来说，当一个组件被创建并添加到DOM中时，Angular会按照以下顺序调用生命周期钩子函数：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("constructor()")]),t._v("：这是组件的构造函数，用于创建组件实例并注入依赖项。")]),t._v(" "),s("li",[s("code",[t._v("ngOnChanges()")]),t._v("：这个钩子函数会在组件的输入属性发生变化时调用。")]),t._v(" "),s("li",[s("code",[t._v("ngOnInit()")]),t._v("：这个钩子函数会在组件初始化完成后立即调用。在这个函数中，您可以执行一些初始化操作，例如获取数据或者订阅一个Observable。")]),t._v(" "),s("li",[s("code",[t._v("ngDoCheck()")]),t._v("：这个钩子函数会在Angular检测到组件的变化时调用。")]),t._v(" "),s("li",[s("code",[t._v("ngAfterContentInit()")]),t._v("：这个钩子函数会在组件内容初始化完成后调用。")]),t._v(" "),s("li",[s("code",[t._v("ngAfterContentChecked()")]),t._v("：这个钩子函数会在Angular检测到组件内容变化后调用。\n7."),s("code",[t._v("ngAfterViewInit()")]),t._v("：这个钩子函数会在组件视图初始化完成后调用。")]),t._v(" "),s("li",[s("code",[t._v("ngAfterViewChecked()")]),t._v("：这个钩子函数会在Angular检测到组件视图变化后调用。")]),t._v(" "),s("li",[s("code",[t._v("ngOnDestroy()")]),t._v("：这个钩子函数会在组件被销毁时调用。")])]),t._v(" "),s("p",[s("code",[t._v("OnInit")]),t._v(" 钩子函数的作用是在组件初始化时执行一些操作。具体来说，当一个组件被创建并添加到DOM中时，Angular会按照以下顺序调用生命周期钩子函数：")]),t._v(" "),s("ol",[s("li",[t._v("首先调用组件的构造函数"),s("code",[t._v("constructor()")]),t._v("。")]),t._v(" "),s("li",[t._v("然后调用"),s("code",[t._v("ngOnChanges()")]),t._v("，如果该组件有输入属性，并且这些输入属性已经发生了变化。")]),t._v(" "),s("li",[t._v("最后调用"),s("code",[t._v("ngOnInit()")]),t._v("，该函数允许您执行一些初始化操作。通常情况下，您可以在这个函数中获取数据或者订阅一个Observable。")])]),t._v(" "),s("p",[t._v("需要注意的是，"),s("code",[t._v("OnInit")]),t._v("只会在组件初始化时被调用一次。如果您需要在组件的生命周期中执行其他操作，请参考上面列出的其他生命周期钩子函数。")]),t._v(" "),s("p",[s("b",{staticStyle:{color:"red"}},[t._v("那为什么要在 class 后面 implements OnInit 呢")]),t._v("\n在Angular中，组件类可以实现一些接口来表明它们具有特定的行为或功能。"),s("code",[t._v("OnInit")]),t._v("是一个接口，它定义了一个名为"),s("code",[t._v("ngOnInit()")]),t._v("的方法，组件类可以实现该方法来在组件初始化时执行一些操作。\n实现"),s("code",[t._v("OnInit")]),t._v("接口并在组件类中实现"),s("code",[t._v("ngOnInit()")]),t._v("方法的作用是让Angular在组件初始化时调用"),s("code",[t._v("ngOnInit()")]),t._v("方法。这样，您就可以在这个方法中执行任何您想要在组件初始化时执行的操作。")]),t._v(" "),s("p",[t._v("例如，如果您想在组件初始化时从服务器获取一些数据，您可以在组件类中实现"),s("code",[t._v("ngOnInit()")]),t._v("方法，并在该方法中发出HTTP请求以获取数据。当Angular调用"),s("code",[t._v("ngOnInit()")]),t._v("方法时，您就可以获取并处理数据。")]),t._v(" "),s("p",[t._v("因此，通过在组件类后面添加"),s("code",[t._v("implements OnInit")]),t._v("，您告诉Angular这个组件类实现了"),s("code",[t._v("OnInit")]),t._v("接口，并且具有"),s("code",[t._v("ngOnInit()")]),t._v("方法。这样，Angular就会在组件初始化时自动调用"),s("code",[t._v("ngOnInit()")]),t._v("方法，让您可以执行一些初始化操作。")]),t._v(" "),s("p",[s("b",{staticStyle:{color:"red"}},[t._v("不 implements OnInit，也可以实现 OnInit() 方法")]),t._v("\n在Angular中，您可以在组件类中定义"),s("code",[t._v("ngOnInit()")]),t._v("方法，即使您没有显式地实现"),s("code",[t._v("OnInit")]),t._v("接口。这是因为"),s("code",[t._v("OnInit")]),t._v("接口只是一个标记接口，它没有任何属性或方法。实现这个接口只是为了告诉Angular这个组件类具有"),s("code",[t._v("ngOnInit()")]),t._v("方法，并且应该在组件初始化时调用。")]),t._v(" "),s("p",[t._v("因此，如果您不显式地实现"),s("code",[t._v("OnInit")]),t._v("接口，但在组件类中定义了"),s("code",[t._v("ngOnInit()")]),t._v("方法，Angular仍然会在组件初始化时自动调用该方法。这是因为Angular会检查组件类中是否存在"),s("code",[t._v("ngOnInit()")]),t._v("方法，并在需要时调用它。")]),t._v(" "),s("p",[t._v("当然，为了更好地表明您的组件类具有"),s("code",[t._v("ngOnInit()")]),t._v("方法，以及为了让其他开发人员更容易地理解您的代码，建议您仍然在组件类后面添加"),s("code",[t._v("implements OnInit")]),t._v("。这样，其他开发人员可以更容易地看出您的组件类实现了哪些接口，并且具有哪些方法。")]),t._v(" "),s("h2",{attrs:{id:"六、一些约定-很重要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、一些约定-很重要"}},[t._v("#")]),t._v(" 六、一些约定（很重要）")]),t._v(" "),s("p",[t._v("$ 是一个约定，表示 "),s("code",[t._v("heroes$")]),t._v(" 是一个 Observable 而不是数组。\n由于 "),s("code",[t._v("*ngFor")]),t._v(" 不能直接使用 Observable，所以要使用一个管道字符（|），后面紧跟着一个 async。这表示 Angular 的 AsyncPipe 管道，它会自动订阅 Observable，这样你就不用在组件类中这么做了。")])])}),[],!1,null,null,null);s.default=o.exports}}]);